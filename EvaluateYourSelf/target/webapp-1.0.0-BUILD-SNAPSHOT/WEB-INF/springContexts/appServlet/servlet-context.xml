<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!--Need to separate all beans for many few files. It will be better management. -->
	<beans:import resource="utils-context.xml" /> <!-- Informations about all additional libraries beans -->
	<beans:import resource="postgresql-context.xml" /> <!-- Postgresql database beans definitions -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources location="/resources/webclient/app/" mapping="/app/**"/>
	<resources location="/resources/webclient/node_modules/" mapping="/node_modules/**"/>
	<!-- <resources mapping="/resources/properties/**" location="/resources/properties/" 
		/> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="0" /> <!-- InternalResourceViewResolver must always assign with the lowest priority 
			because it will resolve the view no matter what view name is returned -->
		<beans:property name="exposedContextBeanNames">
        	<beans:list>
        		<beans:value>properties</beans:value> <!-- We can use all properties in JSP files -->
        	</beans:list>
    	</beans:property>	
	</beans:bean>

    
	<!--Component scan tells Spring MVC where is the root for scanning Controllers, 
		Repositories, etc -->
	<context:component-scan base-package="com.evaluateyourself." />
	
	
</beans:beans>

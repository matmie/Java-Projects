<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<servlet>
		<!-- Parametry ustawienia serwletu przekazującego. Serwlet ten jest usytułowany 
			pomiędzy przeglądarką a aplikacją. Jest to mechanizm analizujący URL przychodzący 
			w żądaniu. Na podstawie URL szuka odpowiedniej metody odpowiedniego kontrolera. -->
		<servlet-name>DispatcherServlet</servlet-name> <!-- Jego nazwa to appServlet -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!-- Klasa implementująca servlet -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/webcontext/DispatcherServlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup> <!-- Priorytet uruchomieniowy (Im niższy tym servlet jest szybciej w kolejce) -->
	</servlet>
	<servlet-mapping>
		<!-- Jak ma byc mapowany adres URL na konkretny servlet. Jeżeli mam tutaj 
			zdefinowanych kilka servletów to wybór serwletu będzie uzależniony od najdłuższego 
			pasującego URL do parametru <url-pattern> EX servlet1 ma pattern /webstore/products/product/detail 
			servlet2 ma pattern /webstore/products/product/ to wywołując zapytanie /webstore/products/product 
			zostanie wywołany servlet2. Jeżeli natomiast będzie /webstore/products/product/detail?id=10 
			to servlet1 -->
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/webcontext/security-context.xml</param-value>
	</context-param>
	<!--ContextLoaderListener załaduje plik /WEB-INF/spring/webcontext/security-context.xml -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!--Konfiguracja filtra Spring Security, tak by każde żądanie było badane 
		pod kątem uwierzytelniania użytkownika -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>